@model CLEANSHOP.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)



    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ID_Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ID_Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID_Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style=" display:flex;justify-content: center; align-items: center;">
        <div class="col-md-10">
            <strong>Hình</strong>
            <div style="display:none">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                   style="display:none;" />
            <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />
            <img src="@Model.Image" id="pictureUpload" style="width:15%; height:15%; object-fit:cover;" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

   @* <div class="form-group">
        @Html.LabelFor(model => model.DisPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisPrice, "", new { @class = "text-danger" })
        </div>
    </div>
       *@

    <div class="form-group">
        @Html.LabelFor(model => model.DisCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DisCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisCount, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group">
           @Html.LabelFor(model => model.DisCount, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-md-10">
            


        @Html.DropDownList("DisCount", (IEnumerable<SelectListItem>)ViewBag.DisCount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DisCount, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.DisPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.DisPrice
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>
    @section upload
    {
        <script>
            $(function () {
                $('#btnUpload').click(function () {
                    $('#fileUpload').trigger('click');
                });
            });
            $('#fileUpload').change(function () {
                if (window.FormData !== undefined) {
                    var fileUpload = $('#fileUpload').get(0);
                    var files = fileUpload.files;
                    var formData = new FormData();
                    formData.append('file', files[0]);
                    $.ajax
                        ({
                            type: 'POST',
                            url: '/DichVu/ProcessUpload',
                            contentType: false,
                            processData: false,
                            data: formData,
                            success: function (urlImage) {
                                $('#pictureUpload').attr('src', urlImage);
                                $('#Image').val(urlImage);
                            },
                            error: function (err) {
                                alert('Error ', err.statusText);

                            }
                        });
                }
            });
        </script>
    }


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>

}


